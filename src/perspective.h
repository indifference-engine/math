#ifndef PERSPECTIVE_H

#define PERSPECTIVE_H

/**
 * Calculates a 4x4 projection matrix for a perspective camera similar to that
 * which would be generated by Blender, and its inverse.  It may differ slightly
 * from that generated by Blender.
 * @param height The height of the viewport, in pixel rows.  Behavior is
 *               undefined if NaN, infinity or negative infinity.
 * @param width The width of the viewport, in pixel columns.  Behavior is
 *              undefined if NaN, infinity or negative infinity.
 * @param focal_length The focal length of the camera, in millimeters.  Behavior
 *                     is undefined if NaN, infinity or negative infinity.
 * @param shift_y The amount of vertical shift, where negative values are down
 *                and positive values are up.  Behavior is undefined if NaN,
 *                infinity or negative infinity.
 * @param shift_x The amount of horizontal shift, where negative values are left
 *                and positive values are right.  Behavior is undefined if NaN,
 *                infinity or negative infinity.
 * @param clip_start The distance between the camera and the near clip plane.
 *                   Behavior is undefined if NaN, infinity or negative
 *                   infinity.
 * @param clip_end The distance between the camera and the far clip plane.
 *                 Behavior is undefined if NaN, infinity or negative infinity.
 * @param sensor_size The size of the sensor, in millimeters.  Behavior is
 *                    undefined if NaN, infinity or negative infinity.
 * @param forward The 4x4 matrix to which to write the result.
 * @param inverse The 4x4 matrix to which to write the inverse of the result.
 */
void perspective(const float height, const float width,
                 const float focal_length, const float shift_y,
                 const float shift_x, const float clip_start,
                 const float clip_end, const float sensor_size,
                 float *const forward, float *const inverse);

#endif
